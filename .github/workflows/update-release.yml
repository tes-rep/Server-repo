name: Update Releases Data

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Update releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               -H "User-Agent: GitHub-Actions" \
               https://api.github.com/repos/de-quenx/XIDZs-WRT/releases > releases.json
        
      - name: Commit and push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add releases.json
          git diff --staged --quiet || (git commit -m "Update releases data" && git push)

      - name: Cleanup old workflows
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CUTOFF_TIME=$(date -d '1 hour ago' -u +"%Y-%m-%dT%H:%M:%SZ")
          
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/actions/runs?per_page=50" | \
          jq -r --arg cutoff "$CUTOFF_TIME" \
          '.workflow_runs[] | select(.created_at < $cutoff) | .id' | \
          head -20 | \
          while read run_id; do
            [ ! -z "$run_id" ] && curl -s -X DELETE \
              -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id"
          done
